set serveroutput on
DECLARE
	CURSOR  	curTUNG IS SELECT OWNER, TABLE_NAME FROM DBA_TABLES WHERE OWNER LIKE 'TUNGSTEN%';

	CURSOR		curVMRR IS SELECT USERNAME FROM DBA_USERS WHERE USERNAME LIKE 'VMRR%';

	TYPE 		typTUNG IS RECORD (	OWNER		SYS.DBA_TABLES.OWNER%TYPE,
									TABLE_NAME	SYS.DBA_TABLES.TABLE_NAME%TYPE );
									
	TYPE		typVMRR IS RECORD (USERNAME	SYS.DBA_USERS.USERNAME%TYPE);
	
	recTUNG		typTUNG;
	recVMRR		typVMRR;
	
	vSQL		VARCHAR2(200);
	curDrop		INTEGER;
	curSwitch	INTEGER;
	x			INTEGER;
	stat		INTEGER;
	
	NO_TABLE_EXISTS		EXCEPTION;
	USER_CONNECT		EXCEPTION;
	
	PRAGMA EXCEPTION_INIT(NO_TABLE_EXISTS,-942);
	PRAGMA EXCEPTION_INIT(USER_CONNECT,-1940);
BEGIN
	stat := 0;
	
	OPEN curTUNG;
	DBMS_OUTPUT.PUT_LINE('Cleaning up TUNGSTEN% Users...');
	
	LOOP
		FETCH curTUNG INTO recTUNG;
		EXIT WHEN curTung%NOTFOUND;
		
		curDrop := DBMS_SQL.OPEN_CURSOR;
		
		vSQL := 'DROP TABLE '||recTUNG.OWNER||'.'||recTUNG.TABLE_NAME;
		DBMS_SQL.PARSE(curDrop, vSQL, DBMS_SQL.NATIVE);
		x := DBMS_SQL.EXECUTE(curDrop);
		DBMS_OUTPUT.PUT_LINE('  ...dropped Table '||recTUNG.OWNER||'.'||recTUNG.TABLE_NAME);
		stat := stat + 1;
		
		DBMS_SQL.CLOSE_CURSOR(curDrop);
	END LOOP;
	
	CLOSE curTung;
	
	IF stat = 0 THEN
		DBMS_OUTPUT.PUT_LINE('No TUNGSTEN objects to Remove');
	ELSE
		DBMS_OUTPUT.PUT_LINE('Dropped ['||stat||'] Table(s)');
	END IF;
	
	OPEN curVMRR;
	
	LOOP
		FETCH curVMRR INTO recVMRR;
		EXIT WHEN curVMRR%NOTFOUND;
		
		BEGIN
			DBMS_OUTPUT.PUT_LINE('Dropping User ['||recVMRR.USERNAME||']..');
			curDrop := DBMS_SQL.OPEN_CURSOR;
		
			vSQL := 'DROP USER '||recVMRR.USERNAME||' CASCADE';
			DBMS_SQL.PARSE(curDrop, vSQL, DBMS_SQL.NATIVE);
			x := DBMS_SQL.EXECUTE(curDrop);
		
			DBMS_SQL.CLOSE_CURSOR(curDrop);
		EXCEPTION
			WHEN USER_CONNECT THEN
				DBMS_OUTPUT.PUT_LINE('The user ['||recVMRR.USERNAME||'] is currently connected, unable to DROP');
		END;
	END LOOP;
	
	vSQL := 'ALTER SYSTEM SWITCH LOGFILE';
	DBMS_OUTPUT.PUT_LINE('Executing ['||vSQL||']');
	
	curSwitch := DBMS_SQL.OPEN_CURSOR;
	DBMS_SQL.PARSE(curSwitch, vSQL, DBMS_SQL.NATIVE);
	x := DBMS_SQL.EXECUTE(curSwitch);
	DBMS_SQL.CLOSE_CURSOR(curSwitch);

EXCEPTION
	WHEN NO_DATA_FOUND THEN
		NULL;
	WHEN NO_TABLE_EXISTS THEN
		DBMS_OUTPUT.PUT_LINE('..Table does not exist ['||vSQL||']');
	WHEN OTHERS THEN
		RAISE;
END;
/
